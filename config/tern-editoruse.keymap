/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define SYS_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <225>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        sticky_tap_layer: sticky_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_TAP_LAYER";
            bindings = <&mo>, <&skq>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <(-1)>;
        };

        swapm: swapm {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPM";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <10>;
        };

        swapl: swapl {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPL";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <10>;
        };

        swapm2: swapm2 {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPM2";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp GRAVE>, <&kt LGUI>;

            ignored-key-positions = <10>;
        };

        swapl2: swapl2 {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPL2";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp GRAVE>, <&kt LALT>;

            ignored-key-positions = <10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Activate system layer on inner thumbs

        combo_sqt {
            timeout-ms = <50>;
            key-positions = <0 8>;
            bindings = <&kp SQT>;
        };

        combo_p {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&kp L>;
        };

        combo_b {
            timeout-ms = <50>;
            key-positions = <21 12>;
            bindings = <&kp X>;
        };

        combo_y {
            timeout-ms = <50>;
            key-positions = <13 22>;
            bindings = <&kp B>;
        };

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        combo_bspc {
            bindings = <&kp BSPC>;
            key-positions = <22 23>;
            layers = <0>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <23 24>;
            layers = <0>;
        };

        combo_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <19 20>;
            layers = <0>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <18 19>;
            layers = <1 2>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <25 24>;
            layers = <1 2>;
        };

        combo_lbrack {
            bindings = <&kp LBKT>;
            key-positions = <19 20>;
            layers = <1 2>;
        };

        combo_rbrack {
            bindings = <&kp RBKT>;
            key-positions = <23 24>;
            layers = <1 2>;
        };

        combo_lparen {
            bindings = <&kp LPAR>;
            key-positions = <20 21>;
            layers = <1 2>;
        };

        combo_rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <22 23>;
            layers = <1 2>;
        };

        combo_bspc2 {
            bindings = <&kp BSPC>;
            key-positions = <21 20>;
            layers = <0>;
        };

        combo_capsword {
            bindings = <&caps_word>;
            key-positions = <9 10>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                 &kp COMMA  &kp PERIOD  &kp P                      &kp Y    &kp F  &kp G      &kp C  &kp R
  &kp A          &kp O      &kp E       &kp U                      &kp I    &kp D  &kp H      &kp T  &kp N  &kp S
  &kp SEMICOLON  &kp Q      &kp J       &kp K                                      &kp M      &kp W  &kp V  &kp Z
                                        &sticky_tap_layer 3 LSHFT  &mo 2    &mo 1  &kp SPACE
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
             &kp N7  &kp N8  &kp N9  &kp PLUS     &kp ASTERISK  &trans      &trans     &trans
  &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp MINUS    &kp SLASH     &sk RCTRL   &sk RSHFT  &sk LEFT_ALT  &sk LGUI
  &kp N0     &kp N1  &kp N2  &kp N3                             &kp PERIOD  &kp QMARK  &kp EXCL      &trans
                             &trans  &trans       &trans        &trans
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
            &trans    &trans      &trans     &trans    &kp PIPE   &kp BACKSLASH  &kp LT     &kp GT
  &sk LGUI  &sk LALT  &sk LSHIFT  &sk LCTRL  &trans    &kp SLASH  &kp TILDE      &kp PRCNT  &kp CARET  &kp AMPS
  &trans    &trans    &trans      &trans                          &kp GRAVE      &kp AT     &kp HASH   &kp DLLR
                                  &trans     &trans    &trans     &trans
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
             &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LS(TAB)    &kp PG_UP  &kp HOME        &kp UP_ARROW    &kp END
  &kp LGUI   &kp LALT   &kp LSHFT  &kp LCTRL  &kp TAB        &kp PG_DN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)                            &swapm          &swapl          &swapm2          &swapl2
                                   &trans     &trans         &trans     &trans
            >;
        };

        sys_layer {
            display-name = "Sys";
            bindings = <
                    &bootloader   &kp C_BRI_DN  &kp C_BRI_UP  &out OUT_USB    &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT
  &kp C_PLAY_PAUSE  &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &out OUT_BLE    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp PRINTSCREEN
  &bt BT_CLR        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &mkp LCLK       &mkp MCLK       &mkp RCLK        &none
                                                &trans        &trans          &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        System-triple {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
